"use strict";(self.webpackChunkreact_examples=self.webpackChunkreact_examples||[]).push([[840],{"./src/stories/collatz.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>collatz_stories,for101:()=>for101,for8:()=>for8,seeMultiple:()=>seeMultiple});var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,react=__webpack_require__("./node_modules/react/index.js"),taggedTemplateLiteral=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");class Collatz extends react.Component{constructor(props){super(props);let x=this.props.number;this.outputArr=function getCollatzSequence(firstNumber){let x=firstNumber;if("number"!=typeof x||x<1||x%1!=0)throw new TypeError("getCollatzSequence requires postive whole number");let outputArr=[x];for(;"number"==typeof x&&1!==x;)x%2==1?x=3*x+1:x/=2,outputArr.push(x);return outputArr}(x)}render(){const{number}=this.props,outputArr=this.outputArr;return(0,jsx_runtime.jsxs)("div",{className:"Collatz",children:[(0,jsx_runtime.jsxs)("h2",{children:["Collatz Sequence for ",number]}),(0,jsx_runtime.jsx)("ul",{children:outputArr.map(((x,ind)=>(0,jsx_runtime.jsx)(SpecialListItem,{listStyleType:"none",children:x},ind)))})]})}}const GridDiv=styled_components_browser_esm.Ay.div(_templateObject||(_templateObject=(0,taggedTemplateLiteral.A)(["\n        display: grid;\n        grid-template-columns: 30% 70%;\n        grid-template-rows: auto;\n        grid-gap: 10px;\n        background-color: #eee;\n        color: black;\n        margin: 20px;\n"]))),LeftColumn=styled_components_browser_esm.Ay.div(_templateObject2||(_templateObject2=(0,taggedTemplateLiteral.A)(["\n        grid-column: 1;\n        margin: 0.8em;\n"]))),RightColumn=styled_components_browser_esm.Ay.div(_templateObject3||(_templateObject3=(0,taggedTemplateLiteral.A)(["\n        grid-column: 2;\n        margin: 0.8em;\n"]))),EmphaticPar=styled_components_browser_esm.Ay.p(_templateObject4||(_templateObject4=(0,taggedTemplateLiteral.A)(["\n        font-style: oblique;\n"]))),VeryEmphaticPar=(0,styled_components_browser_esm.Ay)(EmphaticPar)(_templateObject5||(_templateObject5=(0,taggedTemplateLiteral.A)(["\n        font-size: 150%;\n"]))),SpecialListItem=styled_components_browser_esm.Ay.li(_templateObject6||(_templateObject6=(0,taggedTemplateLiteral.A)(["\n        font-weight: bold;\n        font-size:  90%;\n        padding: 2px;\n        list-style-type: ",";\n"])),(props=>props.listStyleType||"square"));class App extends react.Component{render(){return(0,jsx_runtime.jsxs)(GridDiv,{children:[(0,jsx_runtime.jsxs)(LeftColumn,{children:[(0,jsx_runtime.jsx)("h1",{children:"Collatz Conjecture"}),(0,jsx_runtime.jsxs)("p",{children:["The ",(0,jsx_runtime.jsx)("a",{href:"https://en.wikipedia.org/wiki/Collatz_conjecture",children:"Collatz Conjecture "}),"states that for any positive integer, ",(0,jsx_runtime.jsx)("i",{children:"x"}),", repeatedly applying ",(0,jsx_runtime.jsx)("i",{children:"3x + 1"})," if odd and ",(0,jsx_runtime.jsx)("i",{children:"x/2"})," if even will eventually lead to 1."]}),(0,jsx_runtime.jsx)(VeryEmphaticPar,{children:"No one knows if this is true."})]}),(0,jsx_runtime.jsx)(RightColumn,{children:(0,jsx_runtime.jsx)(Collatz,{number:17})})]})}}App.__docgenInfo={description:"",methods:[],displayName:"App"},Collatz.__docgenInfo={description:"",methods:[],displayName:"Collatz"};const collatz_stories={component:Collatz,title:"Collatz sequence"},for8=()=>(0,jsx_runtime.jsx)(Collatz,{number:8});for8.story={name:"For 8"};const for101=()=>(0,jsx_runtime.jsx)(Collatz,{number:101});for101.story={name:"For 101"};const seeMultiple=()=>(0,jsx_runtime.jsx)("div",{children:[17,22,57].map((x=>(0,jsx_runtime.jsx)(Collatz,{number:x})))});seeMultiple.story={name:"See multiple"},for8.parameters={...for8.parameters,docs:{...for8.parameters?.docs,source:{originalSource:"() => <Collatz number={8} />",...for8.parameters?.docs?.source}}},for101.parameters={...for101.parameters,docs:{...for101.parameters?.docs,source:{originalSource:"() => <Collatz number={101} />",...for101.parameters?.docs?.source}}},seeMultiple.parameters={...seeMultiple.parameters,docs:{...seeMultiple.parameters?.docs,source:{originalSource:"() => <div>\n        {[17, 22, 57].map(x => <Collatz number={x} />)}\n    </div>",...seeMultiple.parameters?.docs?.source}}};const __namedExportsOrder=["for8","for101","seeMultiple"]}}]);